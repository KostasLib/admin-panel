{"version":3,"sources":["components/user-list/ListTileText.module.scss","components/user-list/ListTile.module.scss","components/user-form/View.module.scss","components/app/View.module.scss","components/input/Input.module.scss","user_data.ts","components/user-list/ListTileText.tsx","components/user-list/ListTile.tsx","components/user-list/UserList.tsx","components/input/Input.tsx","components/user-form/View.tsx","components/user-form/getUserInputs.ts","components/user-form/UserForm.tsx","components/app/View.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","text-wrapper","primary","primary--selected","secondary","secondary--selected","list-tile","list-tile--selected","avatar","avatar__image","buttons","cancel","save","panel","squeezeable-section","form-section","input","label","USERS","id","photo","name","company","email","phone","address","ListTileText","props","selected","primaryClass","cn","s","Object","defineProperty","secondaryClass","react_default","a","createElement","className","ListTile","_props$user","user","rest","objectWithoutProperties","listClass","assign","src","alt","concat","ListTileText_ListTileText","UserList","users","selectedID","onSelectUser","map","ListTile_ListTile","title","onClick","key","Input","Fragment","htmlFor","View","_props$inputs","inputs","onChange","hasChanged","onCancel","onSave","onSubmit","onReset","Input_Input","type","placeholder","value","required","maxLength","pattern","disabled","getUserInputs","UserForm","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","handleChange","e","persist","setState","prev","objectSpread","target","handleSave","preventDefault","currentTarget","checkValidity","resetState","handleCancel","inherits","createClass","prevProps","View_View","React","Component","UserList_UserList","UserForm_UserForm","find","u","App","undefined","handleSelectUser","newData","app_View_View","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","app_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00d8f3f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-wrapper\":\"ListTileText_text-wrapper__2UcvR\",\"primary\":\"ListTileText_primary__1s5QC\",\"primary--selected\":\"ListTileText_primary--selected__1gtha\",\"secondary\":\"ListTileText_secondary__3T7LJ\",\"secondary--selected\":\"ListTileText_secondary--selected__311II\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-tile\":\"ListTile_list-tile__AcCoX\",\"list-tile--selected\":\"ListTile_list-tile--selected__3gYYt\",\"avatar\":\"ListTile_avatar__17ZVb\",\"avatar__image\":\"ListTile_avatar__image__14Sia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"View_buttons__mKnbO\",\"cancel\":\"View_cancel__1uGr_\",\"save\":\"View_save__3g_0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"View_panel__1mNht\",\"squeezeable-section\":\"View_squeezeable-section__zIBDA\",\"form-section\":\"View_form-section__3Tz0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2d2Xc\",\"label\":\"Input_label__2raJl\"};","import { IUser } from './interfaces/IUser';\r\n\r\nexport const USERS: IUser[] = [\r\n  {\r\n    id: '5c093af1c6ee9117a581c7d6',\r\n    photo: 'https://randomuser.me/api/portraits/men/40.jpg',\r\n    name: 'Bates Washington',\r\n    company: 'ZOLAREX',\r\n    email: 'bates.washington@zolarex.io',\r\n    phone: '+1 (915) 447-2207',\r\n    address: '958 Brevoort Place, Ona, Maine, 2433',\r\n  },\r\n  {\r\n    id: '5c093af1aeca1bb00607fb2a',\r\n    photo: 'https://randomuser.me/api/portraits/men/1.jpg',\r\n    name: 'Mollie Oneill',\r\n    company: 'VIAGRAND',\r\n    email: 'mollie.oneill@viagrand.biz',\r\n    phone: '+1 (852) 535-3880',\r\n    address: '120 Cedar Street, Mansfield, Kentucky, 8890',\r\n  },\r\n  {\r\n    id: '5c093af11dc4289c2941bd83',\r\n    photo: 'https://randomuser.me/api/portraits/men/2.jpg',\r\n    name: 'Lana Sharpe',\r\n    company: 'SPEEDBOLT',\r\n    email: '',\r\n    phone: '+1 (876) 475-3370',\r\n    address: '673 Revere Place, Canoochee, New Mexico, 4980',\r\n  },\r\n  {\r\n    id: '5c093af172c42a579bdb685f',\r\n    photo: 'https://randomuser.me/api/portraits/men/3.jpg',\r\n    name: 'Massey Ewing',\r\n    company: 'STOCKPOST',\r\n    email: 'massey.ewing@stockpost.ca',\r\n    phone: '+1 (948) 482-2392',\r\n    address: '716 Hazel Court, Hanover, Louisiana, 9603',\r\n  },\r\n  {\r\n    id: '5c093af1264dbf1a467091cf',\r\n    photo: 'https://randomuser.me/api/portraits/men/4.jpg',\r\n    name: 'Patrica Melton',\r\n    company: 'DIGIAL',\r\n    email: 'patrica.melton@digial.name',\r\n    phone: '',\r\n    address: '371 Cortelyou Road, Farmers, Iowa, 1733',\r\n  },\r\n  {\r\n    id: '5c093af1e39cab35f1c9726e',\r\n    photo: 'https://randomuser.me/api/portraits/men/5.jpg',\r\n    name: 'Viola Serrano',\r\n    company: 'ENTALITY',\r\n    email: '',\r\n    phone: '+1 (909) 489-2270',\r\n    address: '787 Bleecker Street, Nipinnawasee, New York, 6872',\r\n  },\r\n  {\r\n    id: '5c093af1dd7402c939bd490c',\r\n    photo: 'https://randomuser.me/api/portraits/men/6.jpg',\r\n    name: 'Tammy Dixon',\r\n    company: 'XTH',\r\n    email: 'tammy.dixon@xth.net',\r\n    phone: '+1 (810) 472-2762',\r\n    address: '293 Linwood Street, Roulette, Nevada, 7805',\r\n  },\r\n  {\r\n    id: '5c093af15b557da4238bcb0c',\r\n    photo: 'https://randomuser.me/api/portraits/men/7.jpg',\r\n    name: 'Christensen Brown',\r\n    company: 'SKYPLEX',\r\n    email: 'christensen.brown@skyplex.us',\r\n    phone: '+1 (892) 462-2141',\r\n    address: '600 Calder Place, Bourg, Hawaii, 9397',\r\n  },\r\n  {\r\n    id: '5c091af1e39cab35f9c9726n',\r\n    photo: 'https://randomuser.me/api/portraits/men/8.jpg',\r\n    name: 'Wilmer Berends',\r\n    company: 'Dabvine',\r\n    email: 'wberends0@unblog.fr',\r\n    phone: '111-757-1393',\r\n    address: '401 Spaight Way',\r\n  },\r\n  {\r\n    id: '5c693af1dd7402c939bd4806',\r\n    photo: 'https://randomuser.me/api/portraits/men/9.jpg',\r\n    name: 'Yolane Culver',\r\n    company: 'Fivespan',\r\n    email: 'yculver1@netvibes.com',\r\n    phone: '471-485-5905',\r\n    address: '1 Colorado Junction',\r\n  },\r\n  {\r\n    id: '50093af15b557da4248bcb02',\r\n    photo: 'https://randomuser.me/api/portraits/men/10.jpg',\r\n    name: 'Clarance Marthen',\r\n    company: 'Shuffledrive',\r\n    email: 'cmarthen2@alibaba.com',\r\n    phone: '638-994-3228',\r\n    address: '6977 Sugar Trail',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport s from './ListTileText.module.scss';\r\n\r\ninterface IProps {\r\n  primary: string;\r\n  secondary?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n/** A function component that renders a user's details in a list tile. Collapses on mobile. */\r\nexport const ListTileText: React.FC<IProps> = props => {\r\n  const { primary, secondary, selected } = props;\r\n\r\n  // classnames\r\n  const primaryClass = cn(s['primary'], { [s['primary--selected']]: selected });\r\n  const secondaryClass = cn(s['secondary'], { [s['secondary--selected']]: selected });\r\n\r\n  return (\r\n    <div className={s['text-wrapper']}>\r\n      <p className={primaryClass}>{primary}</p>\r\n      {secondary && <p className={secondaryClass}>{secondary}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport { IUser } from '../../interfaces/IUser';\r\nimport { ListTileText } from './ListTileText';\r\nimport s from './ListTile.module.scss';\r\n\r\ninterface IProps extends React.HTMLProps<HTMLLIElement> {\r\n  user: IUser;\r\n  selected?: boolean;\r\n}\r\n\r\n/** A function component that renders a user list tile. */\r\nexport const ListTile: React.FC<IProps> = props => {\r\n  const {\r\n    user: { name, email, photo },\r\n    selected,\r\n    ...rest\r\n  } = props;\r\n\r\n  // classnames\r\n  const listClass = cn(s['list-tile'], { [s['list-tile--selected']]: selected });\r\n\r\n  return (\r\n    <li className={listClass} {...rest}>\r\n      <div className={s['avatar']}>\r\n        <img className={s['avatar__image']} src={photo} alt={`${name}'s avatar`} />\r\n      </div>\r\n      <ListTileText primary={name} secondary={email} selected={selected} />\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IUser } from '../../interfaces/IUser';\r\nimport { ListTile } from './ListTile';\r\n\r\ninterface IProps {\r\n  users: IUser[];\r\n  onSelectUser: (id: string) => () => void;\r\n  selectedID?: string;\r\n}\r\n\r\n/** A stateless component that maps through and array of users an renders a list tile for each user */\r\nexport const UserList: React.FC<IProps> = props => {\r\n  const { users, selectedID, onSelectUser } = props;\r\n\r\n  return (\r\n    <ul>\r\n      {users.map(user => (\r\n        <ListTile\r\n          user={user}\r\n          selected={selectedID === user.id}\r\n          title={user.name}\r\n          onClick={onSelectUser(user.id)}\r\n          key={user.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './Input.module.scss';\r\n\r\ninterface IProps extends React.HTMLProps<HTMLInputElement> {\r\n  label?: string;\r\n}\r\n\r\n/**\r\n * A function component that renders a styled <input /> element\r\n * and an accompanying <label />, if the label prop is not omitted.\r\n */\r\nexport const Input: React.FC<IProps> = props => {\r\n  const { label, ...rest } = props;\r\n  return (\r\n    <>\r\n      {label && (\r\n        <label className={s.label} htmlFor={props.name}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input className={s.input} {...rest} />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IUSerInputs } from '../../interfaces/IUserInputs';\r\nimport { Input } from '../input';\r\nimport s from './View.module.scss';\r\n\r\ninterface IProps {\r\n  inputs: IUSerInputs;\r\n  hasChanged: boolean;\r\n  onChange: (name: keyof IUSerInputs) => (e: any) => void;\r\n  onCancel: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  onSave: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\n/** A stateless function component that handles the presentation for the UserForm. */\r\nexport const View: React.FC<IProps> = props => {\r\n  const {\r\n    inputs: { name, email, phone, address, company },\r\n    onChange,\r\n    hasChanged,\r\n    onCancel,\r\n    onSave,\r\n  } = props;\r\n\r\n  return (\r\n    <form onSubmit={onSave} onReset={onCancel}>\r\n      <Input\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Enter name\"\r\n        title=\"Enter name\"\r\n        value={name}\r\n        required\r\n        maxLength={255}\r\n        onChange={onChange('name')}\r\n      />\r\n      <Input\r\n        label=\"Email address\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Enter email\"\r\n        title=\"Enter email\"\r\n        value={email}\r\n        maxLength={255}\r\n        onChange={onChange('email')}\r\n      />\r\n      <Input\r\n        label=\"Phone\"\r\n        type=\"tel\"\r\n        name=\"phone\"\r\n        placeholder=\"Enter phone\"\r\n        title=\"Enter phone\"\r\n        value={phone}\r\n        maxLength={255}\r\n        pattern=\"^[^a-zA-Z]*$\"\r\n        onChange={onChange('phone')}\r\n      />\r\n\r\n      <Input\r\n        label=\"Address\"\r\n        type=\"text\"\r\n        name=\"address\"\r\n        placeholder=\"Enter address\"\r\n        title=\"Enter address\"\r\n        value={address}\r\n        maxLength={255}\r\n        onChange={onChange('address')}\r\n      />\r\n      <Input\r\n        label=\"Company\"\r\n        type=\"text\"\r\n        name=\"company\"\r\n        placeholder=\"Enter company\"\r\n        title=\"Enter company\"\r\n        value={company}\r\n        maxLength={255}\r\n        onChange={onChange('company')}\r\n      />\r\n\r\n      <div className={s.buttons}>\r\n        {hasChanged && (\r\n          <input className={s.cancel} type=\"reset\" value=\"Cancel\" title=\"Cancel\" />\r\n        )}\r\n        <input\r\n          className={s.save}\r\n          type=\"submit\"\r\n          value=\"Save\"\r\n          title=\"Save changes\"\r\n          disabled={!hasChanged}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { IUser } from '../../interfaces/IUser';\r\nimport { IUSerInputs } from '../../interfaces/IUserInputs';\r\n\r\n/** \r\n * Extracts an `IUser`'s editable properties into an object\r\n * or create's a mock object with the same properties if no user is provided.\r\n * @returns An `IUserInputs` object used by the user form as the initial inputs state.\r\n */\r\nexport function getUserInputs(user?: IUser): IUSerInputs {\r\n  if (!user)\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      address: '',\r\n      company: '',\r\n      phone: '',\r\n    };\r\n\r\n  return {\r\n    name: user.name || '',\r\n    email: user.email || '',\r\n    address: user.address || '',\r\n    company: user.company || '',\r\n    phone: user.phone || '',\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { IUSerInputs } from '../../interfaces/IUserInputs';\r\nimport { View } from './View';\r\nimport { IUser } from '../../interfaces/IUser';\r\nimport { getUserInputs } from './getUserInputs';\r\n\r\ninterface IProps {\r\n  user?: IUser;\r\n  onSave: (newData: IUSerInputs) => void;\r\n}\r\n\r\ninterface IState {\r\n  inputs: IUSerInputs;\r\n  hasChanged: boolean;\r\n}\r\n\r\n/** A container component for the form's internal state. The user and the save service are provided by the parent.  */\r\nexport class UserForm extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    inputs: getUserInputs(this.props.user),\r\n    hasChanged: false,\r\n  };\r\n\r\n  /**\r\n   * If this is the first time changing the input, call an additional setState to enable the buttons.\r\n   * Could use `e.target.name` instead of first param, but might not be safe because the `name` attr is optional.\r\n   */\r\n  handleChange = (name: keyof IUSerInputs) => (e: any) => {\r\n    e.persist();\r\n    if (!this.state.hasChanged) this.setState({ hasChanged: true });\r\n\r\n    this.setState(prev => ({\r\n      inputs: { ...prev.inputs, [name]: e.target.value || '' },\r\n    }));\r\n  };\r\n\r\n  /** Use html form validation. If input is valid, call the save service received from props and reset the buttons. */\r\n  handleSave = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!e.currentTarget.checkValidity()) return;\r\n\r\n    this.props.onSave(this.state.inputs);\r\n    this.setState({ hasChanged: false });\r\n  };\r\n\r\n  /** Resets the buttons and the inputs to their initial values. */\r\n  resetState = () =>\r\n    this.setState({ hasChanged: false, inputs: getUserInputs(this.props.user) });\r\n\r\n  /** When the reset event fires, reset the form's state. */\r\n  handleCancel = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.resetState();\r\n  };\r\n\r\n  /** If the selected user has changed, reset the form's state. */\r\n  componentDidUpdate(prevProps: IProps) {\r\n    if (this.props.user !== prevProps.user) this.resetState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        inputs={this.state.inputs}\r\n        onChange={this.handleChange}\r\n        hasChanged={this.state.hasChanged}\r\n        onCancel={this.handleCancel}\r\n        onSave={this.handleSave}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { UserList } from '../user-list';\r\nimport { UserForm } from '../user-form';\r\nimport { IUSerInputs } from '../../interfaces/IUserInputs';\r\nimport { IUser } from '../../interfaces/IUser';\r\nimport s from './View.module.scss';\r\n\r\ninterface IProps {\r\n  users: IUser[];\r\n  selectedID?: string;\r\n  onSelectUser: (id: string) => () => void;\r\n  onSave: (newData: IUSerInputs) => void;\r\n}\r\n\r\n/** A stateless function component that handle's the App's presentation layer. */\r\nexport const View: React.FC<IProps> = props => {\r\n  const { onSave, users, selectedID, onSelectUser } = props;\r\n\r\n  return (\r\n    <article className={s.panel}>\r\n      <section className={s['squeezeable-section']}>\r\n        <UserList onSelectUser={onSelectUser} users={users} selectedID={selectedID} />\r\n      </section>\r\n      <section className={s['form-section']}>\r\n        <UserForm user={users.find(u => u.id === selectedID)} onSave={onSave} />\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { USERS } from '../../user_data';\r\nimport { IUSerInputs } from '../../interfaces/IUserInputs';\r\nimport { IUser } from '../../interfaces/IUser';\r\nimport { View } from './View';\r\n\r\ninterface IState {\r\n  selectedID?: string;\r\n  users: IUser[];\r\n}\r\ninterface IProps {\r\n  users?: IUser[];\r\n}\r\n/**\r\n * A container component holidng the App's state.\r\n * Handles selecting a user and provides a save user service.\r\n */\r\nclass App extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    selectedID: undefined,\r\n    users: this.props.users || USERS,\r\n  };\r\n  /**\r\n   * Changes the selected user id.\r\n   * Provides a way to select a user and render based on the selected user.\r\n   */\r\n  handleSelectUser = (id: string) => () => this.setState({ selectedID: id });\r\n\r\n  /** Saves changes made to a user to the App's state. */\r\n  handleSave = (newData: IUSerInputs) => {\r\n    this.setState(prev => ({\r\n      users: prev.users.map(user =>\r\n        user.id === prev.selectedID ? { ...user, ...newData } : user,\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        users={this.state.users}\r\n        onSelectUser={this.handleSelectUser}\r\n        selectedID={this.state.selectedID}\r\n        onSave={this.handleSave}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}